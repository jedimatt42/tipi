
GPLWS	EQU	>83E0

TIPICFG	BYTE	12
	TEXT	"TIPI.TIPICFG"
	EVEN

btipicfg			; implementation of CALL TIPI
	LIMI	0
	LWPI	WS		; We will eventually be using this workspace any, lets us use GPLWS for BLWP routines.
	MOV	@>832C,R8	; get token pointer to play with

	; create a PAB
	LI	R0,VDPPAB	; destination: PAB in VDP
	LI	R1,PAB		; source: PAB template in ROM
	LI	R2,10		; length: 10 bytes.
	BLWP	@VMBW		; copy LOAD pab template to VDP
	AI	R0,9		; destination: length byte in VDP PAB
	MOV	R8,R1		; source: string parameter to " TIPI" in CALL TIPI...
	AI	R1,5		;   check if '(' is present for parameters
	.setvdpra R1
	CLR	R9
	MOVB	@VDPRD,R9
	CI	R9,>B700	; compare with string parameter tokens are present
	JEQ	copyname 
	; otherwise use default name
	LI	R1,TIPICFG
	LI	R2,13
	BLWP	@VMBW
	JMP	loadfiles

copyname
	; R0 is still set to PAB destination for devicename
	; Reload string source location
	MOV	R8,R1
	AI	R1,7		; skip to after the TIPI("
	.setvdpra R1
	CLR	R9
	MOVB	@VDPRD,R9
	MOV	R9,R2
	SWPB	R2
	INC	R2
	BLWP	@VDPCPY		; copy VDP call param to VDP pab filename

loadfiles
	; Load and run the program images
	B	@DOLOAD

	; and return
	; JMP	bok

bok
	SZCB	@>8342,@>8342	; clear byte for current token, terminates line
	JMP	bdone
	
berror	
	LI	R0,>0700
	MOVB	R0,@>8342

bdone
	MOV	R8,@>832C
	.setvdpra R8		; move vdp counter to new end of token
	MOV	@RET,R11
	INCT	R11
	LI	R8,>4000
	SZCB	R8,@>8354
	RT

bcallfiles			; implementation of CALL FILES(x)
	LIMI	0
	CI	R12,>1100
	JNE	bskip		; if not using CRUBASE of TIFDC, then skip

	MOV	R11,@RET
	STWP	R9		; Get GPLWS for relative access
	MOV	@>832C,R8	; get token pointer to play with

	AI	R8,7		; skip over " FILES("
	.setvdpra R8
	MOVB	@VDPRD,R2
	MOVB	@VDPRD,@R2LB(R9)
	CI	R2,>C801	; is single byte unquoted string?
	JNE	berror
	CLR	R2
	MOVB	@VDPRD,R2
	SWPB	R2		; ascii value of argument
	AI	R2,>00D0	; subtract 48 so we have 0-9
	ANDI	R2,>00FF	; mask byte
	JEQ	berror		; zero is illegal value.
	CI	R2,9		; ensure it is a digit
	JH	berror
	MOVB	@R2LB(R9),@>834C
	BL	@dofiles	; run the common part with subroutine >16
	MOVB	@L2STAT,@L2STAT	; check for error
	JNE	berror
	MOV	@>832C,R8	; reload vdp token pointer
	AI	R8,12		; adjust token pointer
	JMP	bok

bskip
	RT
		
